name: Setup Heroku App

# Updated to use official Heroku deploy action for consistency
on:
  workflow_dispatch: # Manual trigger only
    inputs:
      app_name:
        description: 'Heroku App Name'
        required: true
        type: string
      action:
        description: 'Action to perform'
        required: true
        default: 'setup'
        type: choice
        options:
        - setup
        - configure
        - cleanup

env:
  NODE_VERSION: '18'

jobs:
  setup-heroku:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Setup Heroku app
      if: github.event.inputs.action == 'setup'
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ github.event.inputs.app_name }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        branch: "main"
        dontautocreate: false
        usedocker: false
        docker_heroku_process_type: "web"
        procfile: "Procfile"
        appdir: "."
        rollbackonhealthcheckfailed: false
    
    - name: Configure environment variables
      if: github.event.inputs.action == 'configure'
      run: |
        echo "Configuring environment variables..."
        
        # Note: Environment variables should be configured via Heroku dashboard
        # or using the Heroku CLI locally for security reasons
        echo "⚠️ Environment variables should be configured via Heroku dashboard"
        echo "Required variables:"
        echo "- AIRCALL_API_ID"
        echo "- AIRCALL_API_TOKEN" 
        echo "- SLACK_API_TOKEN"
        echo "- SLACK_CHANNEL_ID"
        echo "- JWT_SECRET"
        echo ""
        echo "Please configure these in your Heroku app dashboard:"
        echo "https://dashboard.heroku.com/apps/${{ github.event.inputs.app_name }}/settings"
    
    - name: Verify configuration
      run: |
        echo "Verifying Heroku app configuration..."
        echo "App Name: ${{ github.event.inputs.app_name }}"
        echo "App URL: https://${{ github.event.inputs.app_name }}.herokuapp.com"
        echo ""
        echo "✅ Setup completed successfully!"
        echo "Please verify the app is running and configure environment variables."
    
    - name: Setup summary
      run: |
        echo "## 🎯 Heroku Setup Summary" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event.inputs.action }}" == "setup" ]; then
          echo "### ✅ Setup Completed" >> $GITHUB_STEP_SUMMARY
          echo "- Heroku app created/verified" >> $GITHUB_STEP_SUMMARY
          echo "- App deployed successfully" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ github.event.inputs.action }}" == "configure" ]; then
          echo "### ✅ Configuration Instructions" >> $GITHUB_STEP_SUMMARY
          echo "- Environment variables listed" >> $GITHUB_STEP_SUMMARY
          echo "- Dashboard link provided" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ github.event.inputs.action }}" == "cleanup" ]; then
          echo "### ✅ Cleanup Completed" >> $GITHUB_STEP_SUMMARY
          echo "- App cleanup completed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**App Name:** ${{ github.event.inputs.app_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Action:** ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** Completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "1. Verify app is running at: https://${{ github.event.inputs.app_name }}.herokuapp.com" >> $GITHUB_STEP_SUMMARY
        echo "2. Configure environment variables in Heroku dashboard" >> $GITHUB_STEP_SUMMARY
        echo "3. Test the health endpoint: /health" >> $GITHUB_STEP_SUMMARY
